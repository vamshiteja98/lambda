name: Deploy Node.js Lambdas

on:
  push:
    branches:
      - main
    paths:
      - '**/*.js' # Trigger on changes to JavaScript files in any directory.

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 2 # To fetch the current commit and its parent.

    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2 # Update this to your preferred region if needed.

    - name: Print changed files
      run: |
        echo "List of changed files:" 
        echo $(git diff --name-only HEAD^ HEAD)

    - name: Create and Deploy Lambdas
      run: |
        # Define the base directory where your Lambda functions are located
        BASE_DIR="./" # Update this path as per your Lambda directory structure
        
        # Iterate over each directory containing a Lambda function
        for dir in $BASE_DIR/*; do
          if [ -d "$dir" ]; then
            FUNCTION_NAME=$(basename "$dir") # Assume the directory name is the Lambda function name
            
            # Create a zip file of the current Lambda function directory
            zip -r "${FUNCTION_NAME}.zip" "$dir"/*.js
            
            # Check if the Lambda function exists in the region
            if aws lambda get-function --function-name "$FUNCTION_NAME" --region us-west-2 > /dev/null 2>&1; then
              # Update the existing Lambda function code
              aws lambda update-function-code --function-name "$FUNCTION_NAME" --zip-file fileb://"${FUNCTION_NAME}.zip" --region us-west-2
              echo "Updated existing Lambda function: $FUNCTION_NAME"
            else
              # Create a new Lambda function if it does not exist
              ROLE_ARN="arn:aws:iam::905418239558:role/Lambdarole" # Update with your Lambda execution role ARN
              HANDLER="index.handler" # Update with the correct handler (e.g., index.handler)
              RUNTIME="nodejs18.x" # Update to the correct runtime (Node.js version)
              aws lambda create-function --function-name "$FUNCTION_NAME" \
                --zip-file fileb://"${FUNCTION_NAME}.zip" \
                --handler "$HANDLER" \
                --runtime "$RUNTIME" \
                --role "$ROLE_ARN" \
                --region us-west-2
              echo "Created new Lambda function: $FUNCTION_NAME"
            fi
            
            # Cleanup the zip file for the current function
            rm "${FUNCTION_NAME}.zip"
          fi
        done

